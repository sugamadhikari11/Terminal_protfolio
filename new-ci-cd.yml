name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  deploy-to-azure:
    name: Deploy to Azure VM
    # This job runs only on pushes to the master branch, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        
      - name: Deploy to Azure VM via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            # Ensure the destination directory exists
            sudo mkdir -p /var/www/terminal-portfolio
            
            # Clean the directory first
            sudo rm -rf /var/www/terminal-portfolio/*
            
            # Ensure Nginx is configured correctly (only needed once)
            if [ ! -f /etc/nginx/sites-available/portfolio ]; then
              sudo bash -c 'cat > /etc/nginx/sites-available/portfolio << EOL
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name sugamadhikari.com.np www.sugamadhikari.com.np;

    root /var/www/terminal-portfolio;
    index index.html;

    # Disable all automatic redirects
    absolute_redirect off;
    port_in_redirect off;
    server_name_in_redirect off;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Direct root location to index.html without redirects
    location = / {
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    # Handle static assets
    location /assets/ {
        add_header Cache-Control "public, max-age=31536000";
        expires 365d;
    }

    # Handle all other paths for SPA routing
    location / {
        add_header Cache-Control no-cache;
        expires 0;
        try_files $uri $uri/index.html /index.html =404;
    }

    # Prevent access to hidden files
    location ~ /\\. {
        deny all;
    }
}
EOL'
              
              sudo ln -sf /etc/nginx/sites-available/portfolio /etc/nginx/sites-enabled/
              sudo rm -f /etc/nginx/sites-enabled/typing-tester /etc/nginx/sites-enabled/default
              sudo systemctl reload nginx
            fi
      
      - name: Copy build files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          source: "dist/*"
          target: "/tmp/terminal-portfolio-deploy"
          strip_components: 1
      
      - name: Move files and set permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            sudo cp -r /tmp/terminal-portfolio-deploy/* /var/www/terminal-portfolio/
            sudo chown -R www-data:www-data /var/www/terminal-portfolio
            sudo chmod -R 755 /var/www/terminal-portfolio
            rm -rf /tmp/terminal-portfolio-deploy
            sudo systemctl reload nginx
